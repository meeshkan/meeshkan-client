jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  timeoutInMinutes: 10
  strategy:
    maxParallel: 1
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - template: azure-steps.yml

- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  timeoutInMinutes: 10
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 1

  steps:
  - template: azure-steps.yml
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

- job: PiPy
  pool:
    vmImage: 'ubuntu-16.04'
  timeoutInMinutes: 10
  condition: and(eq(variables['Build.SourceBranchName'], 'master'), succeeded())
  dependsOn:  
  - Linux
  - macOS
      
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'  # Use latest version
      architecture: 'x64'
  - script: python -m pip install --upgrade pip setuptools wheel twine
    displayName: 'Install tools'
  - script: git config credential.helper "/bin/bash ./git-credentials-helper.sh"
    displayName: 'Git credentials'
  - script: python setup.py upload
    displayName: 'Publishing to PyPi'
